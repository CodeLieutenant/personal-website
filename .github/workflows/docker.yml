name: "Build Docker Image"

on:
  workflow_dispatch:
    inputs:
      version:
        default: ""
        required: true
        type: string
      production:
        default: false
        required: false
        type: boolean
      docker_target:
        default: production
        required: true
        type: string
      base:
        default: base
        required: true
        type: string
  workflow_call:
    inputs:
      version:
        default: ""
        required: true
        type: string
      docker_target:
        default: production
        required: true
        type: string
      production:
        default: false
        required: false
        type: boolean
      base:
        default: base
        required: true
        type: string
    secrets:
      CR_PAT:
        required: true
jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push API
        if: ${{ inputs.production }}
        uses: docker/build-push-action@v5
        with:
          file: docker/php/Dockerfile
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          target: ${{ inputs.docker_target }}
          tags: ghcr.io/dmalusev/website:${{ inputs.version }}
          build-args: |
            BASE=${{ inputs.base }}
      - name: Build and push API
        if: ${{ !inputs.production }}
        uses: docker/build-push-action@v5
        with:
          file: docker/php/Dockerfile
          context: .
          push: true
          pull: true
          platforms: linux/amd64
          target: ${{ inputs.docker_target }}
          tags: ghcr.io/dmalusev/website:${{ inputs.version }}
          build-args: |
            WWWGROUP=1000
            WWWUSER=1000
            BASE=${{ inputs.base }}
